---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { Image } from "astro:assets";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage, tags } =
	Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description ?? ""} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
			a {
				color: #00539f;
			}

			.tags {
				display: flex;
				flex-wrap: wrap;
			}

			.tag {
				margin: 0.25em;
				border: dotted 1px #a1a1a1;
				border-radius: 0.5em;
				padding: 0.5em 1em;
				font-size: 1.15em;
				background-color: #f8fcfd;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{
						heroImage && (
							<Image
								width={1020}
								height={510}
								src={heroImage}
								alt=""
							/>
						)
					}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on{" "}
										<FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<div class="tags">
							{
								tags &&
									tags.map((tag: string) => (
										<p class="tag">
											<a href={`/tags/${tag}`}>{tag}</a>
										</p>
									))
							}
						</div>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<script
			src="https://giscus.app/client.js"
			data-repo="p1gd0g/astroblog"
			data-repo-id="R_kgDOPWWMgA"
			data-category="Announcements"
			data-category-id="DIC_kwDOPWWMgM4Ctp0a"
			data-mapping="pathname"
			data-strict="0"
			data-reactions-enabled="1"
			data-emit-metadata="0"
			data-input-position="bottom"
			data-theme="preferred_color_scheme"
			data-lang="zh-CN"
			data-loading="lazy"
			crossorigin="anonymous"
			async
		></script>
		<Footer />
	</body>
</html>
